import os
import io
import openpyxl
import json
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import MediaIoBaseDownload
import datetime
def get_schedule(day, course, group, redirection=False): # day = "Today", "Tomorrow", либо "Weekly"
    if not(course == '1-2') and not(course == '3-4'):
        raise ValueError(f'Некорректно выбран курс')
    now = datetime.datetime.now()
    # Смещение: 1 день и 5 часов
    offset = datetime.timedelta(days=(1 * day=="Tomorrow"), hours=5)
    # Время со смещением
    new_time = now + offset
    perm_time = new_time.strftime('%d.%m.%Y') 
    path, filename = 'C:\\Users\\Валентин\\TimeTableBot\\downloaded_xlsx', ""
    for each in os.listdir(path): #  Перебор файлов
        if f'Расписание {course} курс на' in each:
            dates = each.replace(f'Расписание {course} курс на', "")
            month1, month2, date1, date2 = dates.split('-')[0].split(".")[1], dates.split('-')[1].split(".")[1], dates.split('-')[0].split(".")[0], dates.split('-')[1].split(".")[0]
            if perm_time.split(".")[1] == month1 or perm_time.split(".")[1] == month2:
                if date1 <= perm_time.split(".")[0] <= date2:
                    filename = each
                    print("Файл найден")
                elif not(date1 <= perm_time.split(".")[0] <= date2) and redirection == True:
                  return "Извините, расписания нет. Скорее всего, вы хотите посмотреть расписание на внеурочный день (воскресенье и т.д.)"
    if filename != "":
        print("идет парсинг")
        week_days = [[12, 25], [26, 37], [38, 49], [50, 61], [62, 73]]
        keys = [14, 26, 38, 50, 62]
        full_path = "".join((path+'\\'+filename).split("~$"))
        workbook = openpyxl.load_workbook(full_path)
        sheet, need_row = workbook.active, ''
        for i in sheet.iter_cols():
          for j in i:
            if j.value == group:
                need_group = j
        if day == "Today" or day == "Tomorrow":
            for i in keys:
                cell = sheet.cell(row = i, column = 1)
                if str(perm_time) in str(cell.value):
                    need_row = cell.row
                    break
            one_day = {}
            schedule = []
            if need_row == 14:
                  schedule.append([sheet.cell(row=12, column=4).value, sheet.cell(row=12, column=6).value])
                  all_days[""] = schedule
                  schedule = []
            for row in sheet.iter_rows(min_row = 7):
                nums = []
                for cell in row:
                    if ((need_group.column <= cell.column <= (need_group.column+4)) or (cell.column in (2, 4))) and (cell.value != None and cell.value != [] and (need_row+11) >= cell.row >= (need_row)):
                        nums.append(f'{str(cell.value)}{')' * (cell.column == 2)}')
                if nums != []:
                    schedule.append(nums)
            one_day[sheet.cell(row=need_row, column=1).value] = schedule
            return one_day
        elif day == "Weekly":
            all_days = {}
            for i in range(0, 5):
              schedule = []
              for row in sheet.iter_rows(min_row = week_days[i][0], max_row = week_days[i][1]):
                nums = []
                for cell in row:
                    if ((need_group.column <= cell.column <= (need_group.column+4)) or (cell.column in (2, 4))) and not(cell.value in ([], None)):
                        nums.append(f'{str(cell.value)}{')' * (cell.column == 2)}')
                if nums != []:
                    schedule.append(nums)
              all_days[sheet.cell(row=int(keys[i]), column=1).value] = schedule
            return all_days
    else:
        print("файл не найден")
        return apload(day, course, group)
def apload(day, course, group):
    print("проводим аплоуд")
    folder_path = 'C:\\Users\\Валентин\\TimeTableBot\\downloaded_xlsx'
    for filename in os.listdir(folder_path):
        file_path = os.path.join(folder_path, filename)
        if os.path.isfile(file_path):
            print(file_path)
            os.remove(file_path)
    try:
        with open('schedule.json', 'r', encoding='utf-8') as file:
          data = json.load(file)
    except FileNotFoundError:
        data = []
        with open('schedule.json', 'w', encoding='utf-8') as file:
            json.dump(data, file)
    SERVICE_ACCOUNT_FILE = "C:\\Users\\Валентин\\Downloads\\coral-firefly-472118-d4-0e2e192450f3.json"
    FOLDER_ID = '1jfQFPUpOuv_tNLyQIoipPVsLQHv_H5UQ'
    SCOPES = ['https://www.googleapis.com/auth/drive.readonly']
    current_files = []
    credentials = service_account.Credentials.from_service_account_file(SERVICE_ACCOUNT_FILE, scopes=SCOPES)
    service = build('drive', 'v3', credentials=credentials)

    #  Запрос на получение списка файлов
    results = service.files().list(
    q=f"'{FOLDER_ID}' in parents and mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'", fields="files(id, name)").execute()
    #  Получение списка файлов
    files = results.get('files', [])
    if not files:
        return print("В папке нет XLSX-файлов.")
    # Создание папки
    os.makedirs('downloaded_xlsx', exist_ok=True)
    # Скачивание
    for file in files:
      file_id = file['id']
      file_name = file['name']
      current_files.append(file_name)
      if not(file_name in data):
        print("новый файл")
        request = service.files().get_media(fileId=file_id)
        file_path = os.path.join('downloaded_xlsx', file_name)
        print(f"Скачивание {file_name}...")
        with open(file_path, 'wb') as f:
            downloader = MediaIoBaseDownload(f, request)
            done = False
            while not done:
                status, done = downloader.next_chunk()
                print(f"Прогресс: {int(status.progress() * 100)}%")
        print(f"{file_name} скачан(а).")
    schedule = get_schedule(day, course, group, redirection=True)
    return schedule
#  p = get_schedule("Weekly", "3-4", 'УП-922')
#  for i in p:
#    print(str(i))
#    for j in p[i]:
#      print(*j)
